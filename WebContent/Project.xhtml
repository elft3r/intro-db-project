<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://java.sun.com/jsf/html"
	  xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets">
    <h:body>
    	<ui:composition template="template.xhtml">
 
    		<ui:define name="content">
				<h1>Project Detail</h1>
				
				<!-- Project Detail Table -->
				<table cellpadding="0" cellspacing="0"  class="projectTable">
					<tr>
						<th>Project Name</th>
						<td><h:outputText value="#{projectController.selectedProject.title}" /></td>
					</tr>
					<tr>
						<th>Project Description</th>
						<td><h:outputText value="#{projectController.selectedProject.description}" /></td>
					</tr>
				</table>				

				<br/>
				
				<!-- Display different funding amounts -->
				<h2>Funding Amounts</h2>
				<h:dataTable value="#{projectController.fundingAmounts}" var="amount" styleClass="projectsTable"
							 cellpadding="0" cellspacing="0" rendered="#{not empty projectController.fundingAmounts}">
				    <h:column>
				        <f:facet name="header">
				            <h:outputText value="Amount" />
				        </f:facet>
				        <h:outputText value="#{amount.amount}" />
				    </h:column>
				    <h:column>
				        <f:facet name="header">
				            <h:outputText value="Reward" />
				        </f:facet>
				        <h:outputText value="#{amount.reward}" />
				    </h:column>
				    <h:column>
				        <f:facet name="header">
				            <h:outputText value="Action" />
				        </f:facet>
				        <!-- Note: 
							 If UICommand or UIInput components are placed inside an iterating component like 
							 <h:dataTable>, <ui:repeat>, etc, then you need to ensure that exactly the same value of 
							 the component is been preserved during the apply request values phase of the form submit 
							 request. JSF will namely reiterate over it to find the clicked link/button and submitted 
							 input values. Putting the bean in the view scope and/or making sure that you load the data
							  model in (post)constructor of the bean (and thus not in the getter method!) should fix it.
							  See: http://stackoverflow.com/questions/2118656/hcommandlink-hcommandbutton-is-not-being-invoked
							  	   http://balusc.blogspot.ch/2011/09/communication-in-jsf-20.html
						-->				        
				        <h:form>
				        	<input type="hidden" name="fundingAmountId" value="#{amount.id}" />
				        	<h:commandButton value="Support" action="#{projectController.support}" disabled="#{sessionData.user == null}"/>
				        </h:form>
				    </h:column>
				</h:dataTable>
				<br/>
				 
				 
				<!-- Allow the user to add a comment -->
				<h:form rendered="#{applicationModel.user.name != null}">
					Add Comment
					<br />
					<h:inputTextarea cols="50" rows="4" value="#{projectController.comment}"/>
					<br />
					<h:commandButton value="Submit" action="#{projectController.addComment}" />
					<br/>
				</h:form>
				
				<!-- TODO Display comments -->
				<h:dataTable value="#{projectController.comments}" var="comment" styleClass="projectsTable"
							 cellpadding="0" cellspacing="0" rendered="#{not empty projectController.comments}">
				    <h:column>
				        <f:facet name="header">
				            <h:outputText value="Username" />
				        </f:facet>
				        <h:outputText value="#{comment.username}" />
				    </h:column>
				    <h:column>
				        <f:facet name="header">
				            <h:outputText value="Comment" />
				        </f:facet>
				        <h:outputText value="#{comment.comment}" />
				    </h:column>
				</h:dataTable>

    		</ui:define>
    	</ui:composition>
    </h:body>
</html>